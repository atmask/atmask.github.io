<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SOLID on Ben Mask</title>
    <link>http://localhost:1313/tags/solid/</link>
    <description>Recent content in SOLID on Ben Mask</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Jul 2024 19:57:08 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/solid/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dependency Injection In Go</title>
      <link>http://localhost:1313/posts/06-go-dependency-injection/</link>
      <pubDate>Sun, 07 Jul 2024 19:57:08 -0400</pubDate>
      <guid>http://localhost:1313/posts/06-go-dependency-injection/</guid>
      <description>&lt;h1 id=&#34;big-idea&#34;&gt;Big Idea&lt;/h1&gt;
&lt;p&gt;Dependency Injection (the &amp;lsquo;D&amp;rsquo; in SOLID design principles) is an important practice good software architecure. When used well, it decouples a class&amp;rsquo;s dependency on an certain interface from any one partciular implementation of that dependency. This means that any class which implements the common interface of the dependency can be injected into the class at runtime for easy configuration. This is especially helpful when it comes to creating stups for mocking when writing unit tests.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
